[2025-09-04T21:35:24.322+0000] {logging_mixin.py:150} WARNING - /home/***/.local/lib/python3.7/site-packages/***/utils/sqlalchemy.py:124 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-09-04T21:35:24.363+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_to_postgres_batch.init_schema scheduled__2025-09-04T21:05:21.100628+00:00 [queued]>
[2025-09-04T21:35:24.397+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_to_postgres_batch.init_schema scheduled__2025-09-04T21:05:21.100628+00:00 [queued]>
[2025-09-04T21:35:24.399+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 3
[2025-09-04T21:35:24.456+0000] {taskinstance.py:1327} INFO - Executing <Task(PostgresOperator): init_schema> on 2025-09-04 21:05:21.100628+00:00
[2025-09-04T21:35:24.472+0000] {standard_task_runner.py:57} INFO - Started process 176 to run task
[2025-09-04T21:35:24.484+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'kafka_to_postgres_batch', 'init_schema', 'scheduled__2025-09-04T21:05:21.100628+00:00', '--job-id', '77', '--raw', '--subdir', 'DAGS_FOLDER/dags.py', '--cfg-path', '/tmp/tmp9busccc6']
[2025-09-04T21:35:24.492+0000] {standard_task_runner.py:85} INFO - Job 77: Subtask init_schema
[2025-09-04T21:35:24.681+0000] {logging_mixin.py:150} WARNING - /home/***/.local/lib/python3.7/site-packages/***/settings.py:195 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-09-04T21:35:24.889+0000] {task_command.py:410} INFO - Running <TaskInstance: kafka_to_postgres_batch.init_schema scheduled__2025-09-04T21:05:21.100628+00:00 [running]> on host d0ffb450fc0e
[2025-09-04T21:35:24.942+0000] {logging_mixin.py:150} WARNING - /home/***/.local/lib/python3.7/site-packages/***/utils/sqlalchemy.py:124 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-09-04T21:35:25.208+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='kafka_to_postgres_batch' AIRFLOW_CTX_TASK_ID='init_schema' AIRFLOW_CTX_EXECUTION_DATE='2025-09-04T21:05:21.100628+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-09-04T21:05:21.100628+00:00'
[2025-09-04T21:35:25.209+0000] {sql.py:265} INFO - Executing: -- Создание схем
CREATE SCHEMA IF NOT EXISTS raw;
CREATE SCHEMA IF NOT EXISTS dds;
CREATE SCHEMA IF NOT EXISTS dictionary;

-- RAW
CREATE TABLE IF NOT EXISTS raw.events (
    id SERIAL PRIMARY KEY,
    user_id INT,
    event_type TEXT,
    city TEXT,
    country TEXT,
    lat DOUBLE PRECISION,
    lon DOUBLE PRECISION,
    cost_usd NUMERIC(10,2),
    cost_eur NUMERIC(10,2),
    cost_rub NUMERIC(10,2),
    weather_temp NUMERIC(5,2),
    weather_desc TEXT,
    timestamp TIMESTAMPTZ DEFAULT NOW()
);

CREATE INDEX IF NOT EXISTS idx_raw_events_user_id ON raw.events(user_id);
CREATE INDEX IF NOT EXISTS idx_raw_events_timestamp ON raw.events(timestamp);
CREATE INDEX IF NOT EXISTS idx_raw_events_event_type ON raw.events(event_type);

-- DDS (пример)
CREATE TABLE IF NOT EXISTS dds.users (
    user_id INT PRIMARY KEY,
    city TEXT,
    country TEXT
);

CREATE TABLE IF NOT EXISTS dds.events (
    event_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES dds.users(user_id),
    event_type TEXT,
    timestamp TIMESTAMPTZ
);

-- DICTIONARY (пример)
CREATE TABLE IF NOT EXISTS dictionary.currencies (
    code TEXT PRIMARY KEY,
    rate_to_usd NUMERIC(10,4),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);
[2025-09-04T21:35:25.259+0000] {base.py:73} INFO - Using connection ID 'postgres_default' for task execution.
[2025-09-04T21:35:25.956+0000] {base.py:73} INFO - Using connection ID 'postgres_default' for task execution.
[2025-09-04T21:35:25.971+0000] {sql.py:375} INFO - Running statement: -- Создание схем
CREATE SCHEMA IF NOT EXISTS raw;
CREATE SCHEMA IF NOT EXISTS dds;
CREATE SCHEMA IF NOT EXISTS dictionary;

-- RAW
CREATE TABLE IF NOT EXISTS raw.events (
    id SERIAL PRIMARY KEY,
    user_id INT,
    event_type TEXT,
    city TEXT,
    country TEXT,
    lat DOUBLE PRECISION,
    lon DOUBLE PRECISION,
    cost_usd NUMERIC(10,2),
    cost_eur NUMERIC(10,2),
    cost_rub NUMERIC(10,2),
    weather_temp NUMERIC(5,2),
    weather_desc TEXT,
    timestamp TIMESTAMPTZ DEFAULT NOW()
);

CREATE INDEX IF NOT EXISTS idx_raw_events_user_id ON raw.events(user_id);
CREATE INDEX IF NOT EXISTS idx_raw_events_timestamp ON raw.events(timestamp);
CREATE INDEX IF NOT EXISTS idx_raw_events_event_type ON raw.events(event_type);

-- DDS (пример)
CREATE TABLE IF NOT EXISTS dds.users (
    user_id INT PRIMARY KEY,
    city TEXT,
    country TEXT
);

CREATE TABLE IF NOT EXISTS dds.events (
    event_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES dds.users(user_id),
    event_type TEXT,
    timestamp TIMESTAMPTZ
);

-- DICTIONARY (пример)
CREATE TABLE IF NOT EXISTS dictionary.currencies (
    code TEXT PRIMARY KEY,
    rate_to_usd NUMERIC(10,4),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);, parameters: None
[2025-09-04T21:35:26.025+0000] {taskinstance.py:1350} INFO - Marking task as SUCCESS. dag_id=kafka_to_postgres_batch, task_id=init_schema, execution_date=20250904T210521, start_date=20250904T213524, end_date=20250904T213526
[2025-09-04T21:35:26.104+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 0
[2025-09-04T21:35:26.192+0000] {taskinstance.py:2653} INFO - 1 downstream tasks scheduled from follow-on schedule check
